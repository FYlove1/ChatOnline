
import QtQuick
import QtQuick.Controls
import QtQuick.Layouts
import "../chatgram_Web_App_UI_Kit_Telegram_Inspired_Community_"
Rectangle {
    id: root
    width: 900
    height: 800
    property alias currentListModel: listView.model

    Input_Bar {
        id: input_Bar
        anchors.bottom: parent.bottom
        anchors.bottomMargin: 50
        anchors.horizontalCenter: parent.horizontalCenter

    }

    ListView {
        id: listView
        width: 755
        clip: true
        anchors.top: parent.top
        anchors.bottom: parent.bottom
        anchors.topMargin: 42
        anchors.bottomMargin: 138
        anchors.horizontalCenter: parent.horizontalCenter
        //contentItem: ListViewContentItem {}
        spacing:12

        model: ListModel {
            ListElement {
                isMine: true
                text: "Hello there!"
                avatar: "images/me.jpg"
                time: "14:30"
            }

            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: true
            //     text: "Hello there!"
            //     avatar: "images/me.jpg"
            //     time: "14:30"
            // }

            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }

            // ListElement {
            //     isMine: true
            //     text: "Hello there!"
            //     avatar: "images/me.jpg"
            //     time: "14:30"
            // }

            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // ListElement {
            //     isMine: true
            //     text: "Hello there!"
            //     avatar: "images/me.jpg"
            //     time: "14:30"
            // }

            // ListElement {
            //     isMine: false
            //     text: "Hi! How are you?"
            //     avatar: "images/other.jpg"
            //     time: "14:31"
            // }
            // 添加更多测试数据...
        }

        delegate: Loader {
            width: parent.width
            sourceComponent: model.isMine ? messageMeComponent : messageOtherComponent
        }
        Component {
            id: messageMeComponent
            Message_Me {
                width: parent.width
                message_Text: model.text
                time_Text: model.time
                // 绑定其他需要的模型属性...
            }
        }
        Component {
            id: messageOtherComponent
            Message_Other {
                width: parent.width
                message_Text:model.text
                time_Text: model.time

            }
        }
    }
}
